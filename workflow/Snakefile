#Snakemake pipeline for discovery and annotation of TE in selected samples
from snakemake.utils import min_version
configfile: "config/config.yaml" 


rule all: 
	input:
		expand("results/{sample}_VEP_exons_tfs_segdup_dnase.vcf", sample=config["samples"])

#Call variants
include: 'rules/callers.smk'

#convert and fix vcf files
include: 'rules/orgvcfs.smk'

#merge all three callers with SVDB
rule svdb_merge:
	input:
		retro="results/{sample}.final.vcf",
		delly_retro="results/{sample}_delly_retro.vcf",
		delly_jitter="results/{sample}_delly_jitter.vcf",
		jitter="results/{sample}_jitter.vcf"
	output:
		"results/{sample}_merged.vcf"
	container: 
		"docker://kristinebilgrav/findtroll:latest"
	shell:
		"svdb --merge --vcf {input.retro} {input.delly_retro} {input.delly_jitter} {input.jitter} --bnd_distance 150 > {output}"

#sort with bcftools
rule sort:
	input: 
		'results/{sample}.merged.vcf'
	output:
		'results/{sample}.sorted.merged.vcf'
	container:
		"docker://kristinebilgrav/findtroll:latest"
	shell:
		'bcftools sort {input} {output}'

		

#annotate with vep and tabix
include: 'rules/annotate.smk'


#filtering results


#rule filter:
	#filter away all that are not TEs


#rule extract: